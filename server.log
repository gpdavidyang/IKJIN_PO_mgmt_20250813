
> rest-express@1.0.0 dev
> NODE_ENV=development tsx server/index.ts

[dotenv@17.2.0] injecting env (30) from .env (tip: ⚙️  write to custom object with { processEnv: myObject })
🔍 DATABASE_URL status: Set
🔍 Database host: aws-0-ap-southeast-1.pooler.supabase.com:6543
🔄 Creating PostgreSQL connection pool...
✅ Database connected successfully (PostgreSQL pool)
암호화 실패: TypeError: crypto.createCipherGCM is not a function
    at EmailSettingsEncryption.encrypt (/Users/david/workspace/IKJIN_PO_20250826/IKJIN_PO_mgmt_20250813/server/utils/email-settings-encryption.ts:31:29)
    at EmailSettingsEncryption.test (/Users/david/workspace/IKJIN_PO_20250826/IKJIN_PO_mgmt_20250813/server/utils/email-settings-encryption.ts:84:30)
    at <anonymous> (/Users/david/workspace/IKJIN_PO_20250826/IKJIN_PO_mgmt_20250813/server/utils/email-settings-encryption.ts:152:31)
    at ModuleJob.run (node:internal/modules/esm/module_job:371:25)
    at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:669:26)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:101:5)
암호화 테스트 실패: Error: 비밀번호 암호화에 실패했습니다
    at EmailSettingsEncryption.encrypt (/Users/david/workspace/IKJIN_PO_20250826/IKJIN_PO_mgmt_20250813/server/utils/email-settings-encryption.ts:43:13)
    at EmailSettingsEncryption.test (/Users/david/workspace/IKJIN_PO_20250826/IKJIN_PO_mgmt_20250813/server/utils/email-settings-encryption.ts:84:30)
    at <anonymous> (/Users/david/workspace/IKJIN_PO_20250826/IKJIN_PO_mgmt_20250813/server/utils/email-settings-encryption.ts:152:31)
    at ModuleJob.run (node:internal/modules/esm/module_job:371:25)
    at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:669:26)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:101:5)
⚠️ 이메일 설정 암호화 기능 테스트 실패
🧪 Development mode: Professional PDF test endpoint available at /api/orders/test-professional-pdf
🧪 Development mode: PDF test endpoint available at /api/orders/test-pdf
[dotenv@17.2.0] injecting env (0) from .env (tip: ⚙️  override existing env vars with { override: true })
🔧 Force-set DATABASE_URL: postgresql://postgres.tbvugytmskxxyqfvqmup:gps110601ysw@[HIDDEN]
Forced re-optimization of dependencies
🚀 WebSocket service initialized
App initialized successfully
node:events:486
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE: address already in use 0.0.0.0:5001
    at Server.setupListenHandle [as _listen2] (node:net:1940:16)
    at listenInCluster (node:net:1997:12)
    at node:net:2206:7
    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)
Emitted 'error' event on Server instance at:
    at emitErrorNT (node:net:1976:8)
    at process.processTicksAndRejections (node:internal/process/task_queues:90:21) {
  code: 'EADDRINUSE',
  errno: -48,
  syscall: 'listen',
  address: '0.0.0.0',
  port: 5001
}

Node.js v24.6.0
